Object subclass: #Monom
	instanceVariableNames: 'exp coef'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'OOP1'

! !

Polynom methodsFor: 'informative'
asDictionary
    | resultDict |
    resultDict := Dictionary new.

    monoms do: [ :monom |
        monom coef = 0
            ifTrue: [ "Skip monom with coef = 0" ]
            ifFalse: [ resultDict at: monom exp put: monom coef ].
    ].

    ^ resultDict.

! !

Polynom methodsFor: 'calculative'
derivative
    | resultPolynom |
    resultPolynom := Polynom new.

    monoms do: [ :monom |
        resultPolynom addMonom: (monom derivative).
    ].

    ^ resultPolynom.

! !

Polynom methodsFor: 'calculative'
add: aPolynom
    | resultPolynom |
    (aPolynom isKindOf: Polynom)
        ifTrue: [
            resultPolynom := Polynom new.
            
            monoms keysAndValuesDo: [ :exp :coef |
                resultPolynom addMonom: (Monom exp: exp coef: coef).
            ].
            
            aPolynom monoms keysAndValuesDo: [ :exp :coef |
                resultPolynom addMonom: (Monom exp: exp coef: coef).
            ].

            ^ resultPolynom.
        ]
        ifFalse: [
            self error: 'Invalid input'
        ].
