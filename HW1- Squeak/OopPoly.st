Object subclass: #PolyStream	instanceVariableNames: 'block'	classVariableNames: ''	poolDictionaries: ''	category: 'OopPoly'!!PolyStream methodsFor: 'getting' stamp: 'marina 1/29/2024 15:58'!block	^block! !!PolyStream methodsFor: 'actions' stamp: 'marina 1/29/2024 16:17'!add: aPolyStream	(aPolyStream isKindOf: PolyStream) 	ifTrue:[		|currentState aPolyBlock|		currentState:= block.		aPolyBlock := aPolyStream block.		block := [:evalValue :filters | (currentState value: evalValue value: filters) + (aPolyBlock value: evalValue value: filters)].		]	ifFalse: [		self error: 'invalid input'.		].	! !!PolyStream methodsFor: 'actions' stamp: 'marina 1/29/2024 16:47'!addCoef: coef withExp: exp	((coef isKindOf: Integer) and: [exp isKindOf: Integer])	ifTrue:[		(exp <0)		ifTrue: [			self error: 'invalid input'.			]		ifFalse: [			|currentState|			currentState:= block.			block := [:evalValue :filters |				|tempResult| 				tempResult := currentState value: evalValue value: filters.				(filters includes: exp)				ifFalse: [					coef * (evalValue raisedTo: exp) + tempResult. 					]				].			].		]	ifFalse: [		self error: 'invalid input'.		].! !!PolyStream methodsFor: 'actions' stamp: 'marina 1/29/2024 16:48'!eval: anInteger	(anInteger isKindOf: Integer)	ifTrue:[		|emptyFilter|		emptyFilter:= Set new.		^ block value: anInteger value: emptyFilter.		]	ifFalse: [		self error: 'invalid input'.		].! !!PolyStream methodsFor: 'actions' stamp: 'marina 1/29/2024 16:17'!myltiplyBy: anInteger	(anInteger isKindOf: Integer)	ifTrue:[		|currentState|		currentState:= block.		block := [:evalValue :filters | anInteger * (currentState value: evalValue value: filters)].		]	ifFalse: [		self error: 'invalid input'.		].! !!PolyStream methodsFor: 'actions' stamp: 'marina 1/29/2024 16:50'!substitute: anInteger	(anInteger isKindOf: Integer)	ifTrue:[		(anInteger = 0)		ifTrue: [			self error: 'invalid input'.			]				ifFalse: [			|currentState|			currentState:= block.			block := [:evalValue :filters | currentState value:(evalValue*anInteger) value: filters].			]		]	ifFalse: [		self error: 'invalid input'.		].! !!PolyStream methodsFor: 'initialize-release' stamp: 'marina 1/29/2024 15:59'!initialize	block := [:evalValue :filters | 0].! !